# 官方示例: https://github.com/discourse/discourse_docker/blob/main/samples/standalone.yml

templates:
  - "templates/postgres.template.yml"
  - "templates/redis.template.yml"
  - "templates/web.template.yml"

## 如果需要 https 支持, 请取消以下两行的注释
# - "templates/web.ssl.template.yml"
# - "templates/web.letsencrypt.ssl.template.yml"

## 使用的邮件服务
expose:
  - "80:80"   # 将容器的 80 端口映射到主机的 80 端口
  #- "443:443" # 不申请证书，故不映射 443 端口

params:
  db_default_text_search_config: "pg_catalog.english"

env:
  LANG: en_US.UTF-8
  UNICORN_WORKERS: 3
  UNICORN_SIDEKIQS: 1
  DISCOURSE_HOSTNAME: 'dgflsbbs1.http-s.us.kg'
  DISCOURSE_DEVELOPER_EMAILS: '1@koshian.serv00.net'
  DISCOURSE_SMTP_ADDRESS: smtp.mail3.serv00.com
  DISCOURSE_SMTP_PORT: 587
  DISCOURSE_SMTP_USER_NAME: '1@koshian.serv00.net'
  DISCOURSE_SMTP_PASSWORD: '11111111@Qq'
  DISCOURSE_SMTP_ENABLE_START_TLS: true         # 你可以根据 SMTP 服务器的要求调整为 false
  DISCOURSE_NOTIFICATION_EMAIL: '1@koshian.serv00.net'
  DISCOURSE_SMTP_OPENSSL_VERIFY_MODE: none

## 数据卷映射
volumes:
  - volume:
      host: /var/discourse/shared/standalone
      guest: /shared
  - volume:
      host: /var/discourse/shared/standalone/log/var-log
      guest: /var/log

## 一些插件的配置 (可选)
hooks:
  after_code:
    - exec:
        cd: $home/plugins
        cmd:
          - git clone https://github.com/discourse/docker_manager.git

## 团队属性 (可选)
## 所有注释字段均可以取消注释并进行修改, 使其适合您的需求
## 对于开发环境, 您可能希望禁用 ssl (默认为启用)

## 修改系统的内核设置, 可能有助于提高生产性能
## 这些设置在 Ubuntu 16.04 上默认开启
## uncomment the below line if you want to customize
## for other systems

## 安装过程
run:
  - exec: echo "Beginning of custom commands"
  ## 如果需要, 可以在这里添加其他命令
  ## - exec: echo "Some custom command"
